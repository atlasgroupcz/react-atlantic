{"version":3,"sources":["webpack:///../src/components/Select/Select.docs.mdx"],"names":["SelectMulti","wrap","SelectMultiView","useSelectMulti","Select","SelectView","useSelect","options","value","label","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","WrapperHorizontal","size","isFullWidth","isMDXComponent"],"mappings":"kcAYaA,EAAcC,eAAKC,IAAiBC,U,sNAC1C,IAAMC,EAASH,eAAKI,IAAYC,U,iNAChC,IAAMC,EAAU,CAAC,CACtBC,MAAO,KACPC,MAAO,gBACN,CACDD,MAAO,KACPC,MAAO,6B,kNAEF,IAAMC,EAAe,Q,uNAC5B,IAAMC,EAAc,CAClBX,cACAI,SACAG,UACAG,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAO5E,kBACE,GAAM,UADR,UAGA,iDAAgC,iBAAGC,WAAW,IAC1C,KAAQ,oEACP,0BAAYA,WAAW,KAAvB,aAFL,aAGA,kBACE,GAAM,gBADR,gBAGA,8BACE,iBAAGA,WAAW,cAAa,0BAAYA,WAAW,KAAvB,UAA3B,yBAAuG,0BAAYA,WAAW,KAAvB,aAAvG,4FAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,6TAYL,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,+BAAgCC,SAAO,GACxEL,QACAH,kBACAS,eACAjB,eACAH,oBACAI,cACAH,mBACAF,YACAsB,uBATwE,gBAUxEV,IAVwE,EAWxEb,cAXwE,EAYxEI,SAZwE,EAaxEG,UAbwE,EAcxEG,eAdwE,GAevEO,QAAQ,cACX,YAACb,EAAD,CAAQG,QAASA,EAASU,QAAQ,YAElC,kBACE,GAAM,SADR,SAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,oLAA2LC,SAAO,GACnOL,QACAH,kBACAS,eACAjB,eACAH,oBACAI,cACAH,mBACAF,YACAsB,uBATmO,gBAUnOV,IAVmO,EAWnOb,cAXmO,EAYnOI,SAZmO,EAanOG,UAbmO,EAcnOG,eAdmO,GAelOO,QAAQ,cACX,YAAC,IAAD,CAAmBA,QAAQ,qBACvB,YAACb,EAAD,CAAQG,QAASA,EAASiB,KAAK,QAAQP,QAAQ,WAC/C,YAACb,EAAD,CAAQG,QAASA,EAASiB,KAAK,SAASP,QAAQ,WAChD,YAACb,EAAD,CAAQG,QAASA,EAASiB,KAAK,QAAQP,QAAQ,aAGnD,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,2CAA4CC,SAAO,GACpFL,QACAH,kBACAS,eACAjB,eACAH,oBACAI,cACAH,mBACAF,YACAsB,uBAToF,gBAUpFV,IAVoF,EAWpFb,cAXoF,EAYpFI,SAZoF,EAapFG,UAboF,EAcpFG,eAdoF,GAenFO,QAAQ,cACX,YAACb,EAAD,CAAQG,QAASA,EAASkB,aAAW,EAACR,QAAQ,YAE9C,kBACE,GAAM,eADR,eAGA,kBACE,GAAM,SADR,SAGA,8BACE,iBAAGC,WAAW,cAAa,0BAAYA,WAAW,KAAvB,eAA3B,2BAA8G,0BAAYA,WAAW,KAAvB,kBAA9G,MAEF,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oCAAqCC,SAAO,GAC7EL,QACAH,kBACAS,eACAjB,eACAH,oBACAI,cACAH,mBACAF,YACAsB,uBAT6E,gBAU7EV,IAV6E,EAW7Eb,cAX6E,EAY7EI,SAZ6E,EAa7EG,UAb6E,EAc7EG,eAd6E,GAe5EO,QAAQ,cACX,YAACjB,EAAD,CAAaO,QAASA,EAASU,QAAQ,iBAEvC,kBACE,GAAM,gBADR,gBAGA,sBACE,kBAAIC,WAAW,MAAf,mEACA,kBAAIA,WAAW,MAAf,8FACA,kBAAIA,WAAW,MAAf,kD,qNAMNJ,EAAWY,gBAAiB","file":"component---src-components-select-select-docs-mdx-5441f179e40b138ec67c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/filipkastovsky/work/atlas-consulting/react-atlantic/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Select as SelectView, SelectMulti as SelectMultiView, useSelect, useSelectMulti } from '.';\nimport { wrap } from '@atlasgroup/react-wrap';\nimport { WrapperHorizontal } from '../../gatsby-theme-docz/components/Wrapper';\nexport const SelectMulti = wrap(SelectMultiView, useSelectMulti);\nexport const Select = wrap(SelectView, useSelect);\nexport const options = [{\n  value: 'UK',\n  label: 'England ðŸ‡¬ðŸ‡§'\n}, {\n  value: 'CZ',\n  label: 'Czech Republic ðŸ‡¨ðŸ‡¿'\n}];\nexport const _frontmatter = {};\nconst layoutProps = {\n  SelectMulti,\n  Select,\n  options,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <p>{`Is an alternative to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\"\n      }}><inlineCode parentName=\"a\">{`<select>`}</inlineCode></a>{` element.`}</p>\n    <h2 {...{\n      \"id\": \"common-usage\"\n    }}>{`Common usage`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`Select`}</inlineCode>{` must be wrapped with `}<inlineCode parentName=\"p\">{`useSelect`}</inlineCode>{` to make the element interactive. Using the component with a custom hook is encouraged.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Select, useSelect, styled } from '@atlasgroup/react-atlantic';\nimport { wrap } from '@atlasgroup/react-wrap';\n\n// Optional\nconst ProjectSpecificStyledSelect = styled(Select)\\`\n    // ... Project specific styles ...\n\\`;\n\nconst ProjectSpecificSelect = wrap(ProjectSpecificStyledSelect, useSelect);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<Select options={options} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      SelectView,\n      SelectMultiView,\n      useSelect,\n      useSelectMulti,\n      wrap,\n      WrapperHorizontal,\n      DefaultLayout,\n      SelectMulti,\n      Select,\n      options,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Select options={options} mdxType=\"Select\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={1} __code={'<WrapperHorizontal>\\n  <Select options={options} size=\\\"small\\\" />\\n  <Select options={options} size=\\\"medium\\\" />\\n  <Select options={options} size=\\\"large\\\" />\\n</WrapperHorizontal>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      SelectView,\n      SelectMultiView,\n      useSelect,\n      useSelectMulti,\n      wrap,\n      WrapperHorizontal,\n      DefaultLayout,\n      SelectMulti,\n      Select,\n      options,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <WrapperHorizontal mdxType=\"WrapperHorizontal\">\n        <Select options={options} size=\"small\" mdxType=\"Select\" />\n        <Select options={options} size=\"medium\" mdxType=\"Select\" />\n        <Select options={options} size=\"large\" mdxType=\"Select\" />\n    </WrapperHorizontal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"full-width\"\n    }}>{`Full width`}</h2>\n    <Playground __position={2} __code={'<Select options={options} isFullWidth />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      SelectView,\n      SelectMultiView,\n      useSelect,\n      useSelectMulti,\n      wrap,\n      WrapperHorizontal,\n      DefaultLayout,\n      SelectMulti,\n      Select,\n      options,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Select options={options} isFullWidth mdxType=\"Select\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"other-views\"\n    }}>{`Other views`}</h2>\n    <h3 {...{\n      \"id\": \"multi\"\n    }}>{`Multi`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`SelectMulti`}</inlineCode>{` should be wrapped with `}<inlineCode parentName=\"p\">{`useSelectMulti`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <Playground __position={3} __code={'<SelectMulti options={options} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      SelectView,\n      SelectMultiView,\n      useSelect,\n      useSelectMulti,\n      wrap,\n      WrapperHorizontal,\n      DefaultLayout,\n      SelectMulti,\n      Select,\n      options,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <SelectMulti options={options} mdxType=\"SelectMulti\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"known-issues\"\n    }}>{`Known issues`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`[#1]`}{` - Unnecessary wrapping of the component in each project`}</li>\n      <li parentName=\"ul\">{`[#2]`}{` - The component is not accessible via keyboard (might be useful for accessibility)`}</li>\n      <li parentName=\"ul\">{`[#3]`}{` - Third party component is used`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}