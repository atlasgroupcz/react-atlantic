{"version":3,"sources":["webpack:///../src/components/Icon/Icon.docs.mdx"],"names":["supportedNames","Object","keys","IconsMap","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Icon","WrapperHorizontal","map","name","title","key","parentName","isRotating","isMDXComponent"],"mappings":"wWAYaA,EAAiBC,OAAOC,KAAKC,U,qNACnC,IAAMC,EAAe,Q,mNAC5B,IAAMC,EAAc,CAClBL,iBACAI,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,kBACE,GAAM,QADR,QAGA,iGACA,kBACE,GAAM,mBADR,mBAGA,yGACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sIAAuIC,SAAO,GAC/KJ,QACAH,kBACAQ,eACAC,SACAb,aACAc,uBAN+K,gBAO/KV,IAP+K,EAQ/KP,iBAR+K,EAS/KI,eAT+K,GAU9KO,QAAQ,cACX,YAAC,IAAD,CAAmBA,QAAQ,qBACtBX,EAAekB,KAAI,SAAAC,GAAI,OAAI,YAAC,IAAD,CAAMA,KAAMA,EAAMC,MAAOD,EAAME,IAAKF,EAAMR,QAAQ,cAGlF,kBACE,GAAM,iBADR,iBAGA,6FAA4E,0BAAYW,WAAW,KAAvB,WAA5E,SACA,YAAC,IAAD,CAAYV,WAAY,EAAGC,OAAQ,0EAA+EC,SAAO,GACvHJ,QACAH,kBACAQ,eACAC,SACAb,aACAc,uBANuH,gBAOvHV,IAPuH,EAQvHP,iBARuH,EASvHI,eATuH,GAUtHO,QAAQ,cACX,YAAC,IAAD,CAAMQ,KAAM,UAAWI,YAAU,EAACZ,QAAQ,SAC1C,YAAC,IAAD,CAAMQ,KAAM,OAAQI,YAAU,EAACZ,QAAQ,gB,iNAM3CH,EAAWgB,gBAAiB","file":"component---src-components-icon-icon-docs-mdx-17b25cc365a276a43511.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/filipkastovsky/work/atlas-consulting/react-atlantic/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Icon } from '.';\nimport { IconsMap } from '.';\nimport { WrapperHorizontal } from '../../gatsby-theme-docz/components/Wrapper';\nexport const supportedNames = Object.keys(IconsMap);\nexport const _frontmatter = {};\nconst layoutProps = {\n  supportedNames,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"icon\"\n    }}>{`Icon`}</h1>\n    <p>{`Icon component provides set of basic svg icons commonly used in web apps`}</p>\n    <h2 {...{\n      \"id\": \"supported-icons\"\n    }}>{`Supported Icons`}</h2>\n    <p>{`Name of specific icon is in title of each icon - just hover icon to see its name`}</p>\n    <Playground __position={0} __code={'<WrapperHorizontal>\\n  {supportedNames.map(name => (\\n    <Icon name={name} title={name} key={name} />\\n  ))}\\n</WrapperHorizontal>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Icon,\n      IconsMap,\n      WrapperHorizontal,\n      DefaultLayout,\n      supportedNames,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <WrapperHorizontal mdxType=\"WrapperHorizontal\">\n        {supportedNames.map(name => <Icon name={name} title={name} key={name} mdxType=\"Icon\" />)}\n    </WrapperHorizontal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"rotating-prop\"\n    }}>{`Rotating prop`}</h2>\n    <p>{`Make css animation of rotating icon... use wisely, propably only for `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{` icon`}</p>\n    <Playground __position={1} __code={'<Icon name={\\'loading\\'} isRotating />\\n<Icon name={\\'edit\\'} isRotating />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Icon,\n      IconsMap,\n      WrapperHorizontal,\n      DefaultLayout,\n      supportedNames,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Icon name={'loading'} isRotating mdxType=\"Icon\" />\n    <Icon name={'edit'} isRotating mdxType=\"Icon\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}