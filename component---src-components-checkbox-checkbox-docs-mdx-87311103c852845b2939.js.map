{"version":3,"sources":["webpack:///../src/components/Checkbox/Checkbox.docs.mdx"],"names":["Checkbox","wrap","CheckboxView","useCheckbox","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","WrapperHorizontal","size","isDefaultChecked","isDisabled","horizontalPosition","isPartiallyChecked","isChecked","isMDXComponent"],"mappings":"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","file":"component---src-components-checkbox-checkbox-docs-mdx-87311103c852845b2939.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/filipkastovsky/work/atlas-consulting/react-atlantic/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Checkbox as CheckboxView, useCheckbox } from '.';\nimport { WrapperHorizontal } from '../../gatsby-theme-docz/components/Wrapper';\nimport { wrap } from '@atlasgroup/react-wrap';\nexport const Checkbox = wrap(CheckboxView, useCheckbox);\nexport const _frontmatter = {};\nconst layoutProps = {\n  Checkbox,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Better looking alternative to native HTML checkbox`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Checkbox as CheckboxView, useCheckbox } from '@atlasgroup/react-atlantic';\n\nconst Checkbox = wrap(CheckboxView, useCheckbox);\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{` must be wrapped with `}<inlineCode parentName=\"p\">{`useCheckbox`}</inlineCode>{` to make the element interactive. But be aware `}<inlineCode parentName=\"p\">{`useCheckbox`}</inlineCode>{` hook provides basic checkbox logic only such as handling `}<inlineCode parentName=\"p\">{`isChecked`}</inlineCode>{` prop, for more info see `}<a parentName=\"p\" {...{\n          \"href\": \"#known-bugs\"\n        }}>{`known bugs section`}</a></p>\n    </blockquote>\n    <Playground __position={0} __code={'<Checkbox>Check ME</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxView,\n      useCheckbox,\n      WrapperHorizontal,\n      wrap,\n      DefaultLayout,\n      Checkbox,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox mdxType=\"Checkbox\">Check ME</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"sizes\"\n    }}>{`Sizes`}</h2>\n    <Playground __position={1} __code={'<CheckboxView size=\\\"small\\\">Check ME</CheckboxView>\\n<CheckboxView size=\\\"medium\\\">Check ME</CheckboxView>\\n<CheckboxView size=\\\"large\\\">Check ME</CheckboxView>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxView,\n      useCheckbox,\n      WrapperHorizontal,\n      wrap,\n      DefaultLayout,\n      Checkbox,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxView size=\"small\" mdxType=\"CheckboxView\">Check ME</CheckboxView>\n    <CheckboxView size=\"medium\" mdxType=\"CheckboxView\">Check ME</CheckboxView>\n    <CheckboxView size=\"large\" mdxType=\"CheckboxView\">Check ME</CheckboxView>\n    </Playground>\n    <h2 {...{\n      \"id\": \"other-props\"\n    }}>{`Other props`}</h2>\n    <Playground __position={2} __code={'<Checkbox isDefaultChecked>Check ME</Checkbox>\\n<Checkbox isDisabled>Check ME</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxView,\n      useCheckbox,\n      WrapperHorizontal,\n      wrap,\n      DefaultLayout,\n      Checkbox,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox isDefaultChecked mdxType=\"Checkbox\">Check ME</Checkbox>\n    <Checkbox isDisabled mdxType=\"Checkbox\">Check ME</Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"text-positions\"\n    }}>{`Text positions`}</h2>\n    <Playground __position={3} __code={'<WrapperHorizontal>\\n  <CheckboxView horizontalPosition=\\\"left\\\">Check ME</CheckboxView>\\n  <CheckboxView horizontalPosition=\\\"right\\\">Check ME</CheckboxView>\\n</WrapperHorizontal>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxView,\n      useCheckbox,\n      WrapperHorizontal,\n      wrap,\n      DefaultLayout,\n      Checkbox,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <WrapperHorizontal mdxType=\"WrapperHorizontal\">\n        <CheckboxView horizontalPosition=\"left\" mdxType=\"CheckboxView\">Check ME</CheckboxView>\n        <CheckboxView horizontalPosition=\"right\" mdxType=\"CheckboxView\">Check ME</CheckboxView>\n    </WrapperHorizontal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"known-bugs\"\n    }}>{`Known bugs`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`useCheckbox`}</inlineCode>{` hook does not handle correctly `}<inlineCode parentName=\"li\">{`isPartiallyChecked`}</inlineCode>{` prop`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`useCheckbox`}</inlineCode>{` hook does not pass props (e.g. `}<inlineCode parentName=\"li\">{`size`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`horizontalPosition`}</inlineCode>{`, ...)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CheckboxView`}</inlineCode>{` can not have `}<inlineCode parentName=\"li\">{`isPartiallyChecked`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`isChecked`}</inlineCode>{` prop at the same time`}</li>\n    </ul>\n    <Playground __position={4} __code={'<Checkbox isPartiallyChecked>Check ME</Checkbox>\\n<CheckboxView isPartiallyChecked isChecked>\\n  Check ME\\n</CheckboxView>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CheckboxView,\n      useCheckbox,\n      WrapperHorizontal,\n      wrap,\n      DefaultLayout,\n      Checkbox,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox isPartiallyChecked mdxType=\"Checkbox\">Check ME</Checkbox>\n    <CheckboxView isPartiallyChecked isChecked mdxType=\"CheckboxView\">\n        Check ME\n    </CheckboxView>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}