{"version":3,"sources":["webpack:///../src/components/Tooltips/Tooltips.docs.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Tooltips","useTooltip","Playground","Text","WrapperVertical","tooltip","ref","data-title","data-position","isMDXComponent"],"mappings":"iVAaaA,EAAe,Q,2NAENC,EAKU,YALhC,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,qGACA,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,kBADR,kBAGA,8BACE,iBAAGC,WAAW,cAAd,uCAAmE,0BAAYA,WAAW,KAAvB,OAAnE,OAA0H,0BAAYA,WAAW,KAAvB,YAA1H,cAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,gMAWL,kBACE,GAAM,qDADR,qDAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,ySAaL,kBACE,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,orBAAqsBC,SAAO,GAC7uBL,QACAH,kBACAS,aACAC,eACAC,eACAC,YACAC,qBAP6uB,gBAQ7uBb,IAR6uB,EAS7uBJ,eAT6uB,GAU5uBQ,QAAQ,eACV,WAmBG,OAAO,YAAC,IAAD,CAAUA,QAAQ,YACjB,aAnBU,WAChB,IAAMU,EAAUJ,cAChB,OAAO,YAAC,IAAD,CAAiBN,QAAQ,mBACtB,YAAC,OAAD,CAAMW,IAAKD,EAASE,aAAW,OAAOC,gBAAc,OAAOb,QAAQ,QAAnE,sBAGA,YAAC,OAAD,CAAMW,IAAKD,EAASE,aAAW,QAAQC,gBAAc,QAAQb,QAAQ,QAArE,sBAGA,YAAC,OAAD,CAAMW,IAAKD,EAASE,aAAW,MAAMC,gBAAc,MAAMb,QAAQ,QAAjE,sBAGA,YAAC,OAAD,CAAMW,IAAKD,EAASE,aAAW,SAASC,gBAAc,SAASb,QAAQ,QAAvE,yBAOJ,CAAWA,QAAQ,kBAI/B,kBACE,GAAM,2BADR,2BAGA,kBACE,GAAM,gBADR,gBAGA,8BACE,iBAAGC,WAAW,cAAd,iDAA6E,0BAAYA,WAAW,KAAvB,eAA7E,YAAiJ,0BAAYA,WAAW,KAAvB,YAAjJ,cAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,+DAIL,kBACE,GAAM,eADR,eAGA,8BACE,iBAAGA,WAAW,cAAd,qBAAiD,0BAAYA,WAAW,KAAvB,eAAjD,MAA+G,0BAAYA,WAAW,KAAvB,gBAA/G,iBAAyL,0BAAYA,WAAW,KAAvB,YAAzL,2BAAyQ,0BAAYA,WAAW,KAAvB,WAAzQ,QAAqU,0BAAYA,WAAW,KAAvB,YAArU,yCAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,wGAML,kBACE,GAAM,WADR,WAGA,8BACE,iBAAGA,WAAW,cAAd,oCAAgE,0BAAYA,WAAW,KAAvB,WAAhE,gBAAoI,0BAAYA,WAAW,KAAvB,YAApI,wDAEF,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,oI,yNAYTJ,EAAWiB,gBAAiB","file":"component---src-components-tooltips-tooltips-docs-mdx-3a156c5f086408f3753d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/filipkastovsky/work/atlas-consulting/react-atlantic/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Tooltips } from './Tooltips';\nimport { useTooltip } from './hooks';\nimport { Playground } from 'docz';\nimport { Text } from '../Typography';\nimport { WrapperVertical } from '../../gatsby-theme-docz/components/Wrapper';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Component = makeShortcode(\"Component\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"tooltips\"\n    }}>{`Tooltips`}</h1>\n    <p>{`Is a component that displays a tooltip when the user hovers over an element.`}</p>\n    <h2 {...{\n      \"id\": \"tooltip-usage\"\n    }}>{`Tooltip usage`}</h2>\n    <h3 {...{\n      \"id\": \"predisposition\"\n    }}>{`Predisposition`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Before usage, you need to wrap your `}<inlineCode parentName=\"p\">{`App`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`Tooltips`}</inlineCode>{` provider`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { Tooltips } from '@atlasgroup/react-atlantic';\n\n// App.tsx\nexport const App = () => (\n    <OtherProvider>\n        <Tooltips>// Your app</Tooltips>\n    </OtherProvider>\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"then-you-are-set-to-go-for-specific-tooltip-usage\"\n    }}>{`Then you are set to go for specific tooltip usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useTooltip, Text } from '@atlasgroup/react-atlantic';\n\nexport const Component = () => {\n    const tooltip = useTooltip();\n    return (\n        <Text ref={tooltip} data-title=\"Text to display\" data-position=\"left\">\n            Czech Republic🇨🇿\n        </Text>\n    );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"different-positions\"\n    }}>{`Different positions`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const Component = () => {\\n    const tooltip = useTooltip()\\n    return (\\n      <WrapperVertical>\\n        <Text ref={tooltip} data-title=\\\"Left\\\" data-position=\\\"left\\\">\\n          Hover over me 👋🏻\\n        </Text>\\n        <Text ref={tooltip} data-title=\\\"Right\\\" data-position=\\\"right\\\">\\n          Hover over me 👋🏼\\n        </Text>\\n        <Text ref={tooltip} data-title=\\\"Top\\\" data-position=\\\"top\\\">\\n          Hover over me 👋🏾\\n        </Text>\\n        <Text ref={tooltip} data-title=\\\"Bottom\\\" data-position=\\\"bottom\\\">\\n          Hover over me 👋🏿\\n        </Text>\\n      </WrapperVertical>\\n    )\\n  }\\n  return (\\n    <Tooltips>\\n      <Component />\\n    </Tooltips>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Tooltips,\n      useTooltip,\n      Playground,\n      Text,\n      WrapperVertical,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    {() => {\n        const Component = () => {\n          const tooltip = useTooltip();\n          return <WrapperVertical mdxType=\"WrapperVertical\">\n                    <Text ref={tooltip} data-title=\"Left\" data-position=\"left\" mdxType=\"Text\">\n                        Hover over me 👋🏻\n                    </Text>\n                    <Text ref={tooltip} data-title=\"Right\" data-position=\"right\" mdxType=\"Text\">\n                        Hover over me 👋🏼\n                    </Text>\n                    <Text ref={tooltip} data-title=\"Top\" data-position=\"top\" mdxType=\"Text\">\n                        Hover over me 👋🏾\n                    </Text>\n                    <Text ref={tooltip} data-title=\"Bottom\" data-position=\"bottom\" mdxType=\"Text\">\n                        Hover over me 👋🏿\n                    </Text>\n                </WrapperVertical>;\n        };\n\n        return <Tooltips mdxType=\"Tooltips\">\n                <Component mdxType=\"Component\" />\n            </Tooltips>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"tooltips-provider-props\"\n    }}>{`Tooltips provider props`}</h2>\n    <h3 {...{\n      \"id\": \"hidetooltips\"\n    }}>{`hideTooltips`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can hide the tooltips globally by passing `}<inlineCode parentName=\"p\">{`hideTooltip`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`Tooltips`}</inlineCode>{` provider`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Tooltips hideTooltips={true}>{/*Component*/}</Tooltips>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"contentattr\"\n    }}>{`contentAttr`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can also pass `}<inlineCode parentName=\"p\">{`contentAttr`}</inlineCode>{` & `}<inlineCode parentName=\"p\">{`positionAttr`}</inlineCode>{` props to the `}<inlineCode parentName=\"p\">{`Tooltips`}</inlineCode>{` provider to change the `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` attribute of tooltips respectivelly`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Tooltips contentAttr=\"data-content\" positionAttr=\"data-place\">\n    {/*Component*/}\n</Tooltips>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tooltip\"\n    }}>{`Tooltip`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Last but not least, you can pass `}<inlineCode parentName=\"p\">{`Tooltip`}</inlineCode>{` prop to the `}<inlineCode parentName=\"p\">{`Tooltips`}</inlineCode>{` provider to change the component used for tooltips`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const StyledTooltip = styled.div\\`\n    color: red;\n\\`;\n\n<Tooltips Tooltip={StyledTooltip}>{/*Component*/}</Tooltips>;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}